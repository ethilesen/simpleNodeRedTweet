[{"id":"99383b40.bc0688","type":"websocket-listener","z":"1b7dda14.70fe76","path":"/ws/simple","wholemsg":"false"},{"id":"b4c98eaa.fde73","type":"websocket out","z":"1b7dda14.70fe76","name":"","server":"99383b40.bc0688","client":"","x":427.5714111328125,"y":147.7143096923828,"wires":[]},{"id":"b7d17a0e.ce2d08","type":"http response","z":"1b7dda14.70fe76","name":"","x":544.5714416503906,"y":82.71430206298828,"wires":[]},{"id":"d56a319e.e1c4c","type":"http in","z":"1b7dda14.70fe76","name":"","url":"/simple","method":"get","swaggerDoc":"","x":108,"y":82.28572845458984,"wires":[["2b803a49.657e26"]]},{"id":"2b803a49.657e26","type":"template","z":"1b7dda14.70fe76","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Twitter feed View</title>\n     <link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css\"/>\n     <script src=\"http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js\"></script>\n     <style>\n         #messages {overflow-y:scroll;}\n     </style>\n    <script type=\"text/javascript\">\n        var mymap;\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            mymap = L.map('mapid').setView([58.505, 10.09], 1);\n            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw', {\n\t\t\tmaxZoom: 18,\n\t\t\tattribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, ' +\n\t\t\t\t'<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n\t\t\t\t'Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n\t\t\tid: 'mapbox.streets'\n\t\t    }).addTo(mymap); \n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = JSON.parse(msg.data);\n                console.log(data);\n                // build the output from the topic and payload parts of the object\n                line = \"<p style=\\\"font-weight: bold\\\">From: <a style=\\\"font-weight: normal\\\">\" +data.name+ \"<a style=\\\"font-weight: bold\\\"> Message: <a style=\\\"font-weight: normal\\\">\" +data.meld;\n                 // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML += line;\n                var div = document.getElementById('messages');\n                div.scrollTop = div.scrollHeight - div.clientHeight;\n                if(data.lat){\n                drawmap(data.lat,data.lon,data.meld,data.name);\n                }\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n        \n        function drawmap(lat,lon,meld,name){\n        L.marker([lat, lon]).addTo(mymap)\n\t\t.bindPopup(\"<b>\"+name+\" </b>\" +meld+\" \").openPopup();\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <h1>Simple Live Twitter feed View</h1>\n        <div id=\"status\">unknown</div>\n        <hr/>\n        <div id=\"mapid\" style=\"width: 100%; height: 300px\"></div>\n        <hr/>\n        <font face=\"Arial\">\n        <div style=\"overflow-y: auto; height:150px; \" id=\"messages\"></div> \n        <hr/>\n        </font>\n    </body>\n</html>\n","x":337.76190185546875,"y":82.66667938232422,"wires":[["b7d17a0e.ce2d08"]]},{"id":"aac3fa1f.95c7e8","type":"twitter in","z":"1b7dda14.70fe76","twitter":"","tags":"@first_house,oslo,norge,ulykke,erna_solberg,stortinget,politikk,samfund","user":"false","name":"","topic":"tweets","x":288.23809814453125,"y":273.71429443359375,"wires":[["b5fd5156.2ca63"]]},{"id":"b5fd5156.2ca63","type":"function","z":"1b7dda14.70fe76","name":"prep data function","func":"if (msg.tweet.geo) {\n\tmsg.payload = {\"meld\": msg.payload,\"name\": msg.tweet.user.name,\"lat\":msg.tweet.coordinates.coordinates[1],\"lon\":msg.tweet.coordinates.coordinates[0]};\n\tnode.send(msg);\n\treturn 0;\n\t}\n\t      msg.payload = {\"meld\": msg.payload,\"name\": msg.tweet.user.name};\n\t      node.send(msg);\n\t      return;\n\t \n    ","outputs":"1","noerr":0,"x":164.9047393798828,"y":146.3809814453125,"wires":[["b4c98eaa.fde73"]]}]
